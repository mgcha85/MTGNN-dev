best val loss= 0.9690815325977966
best hps= [2, 0.0005, 8, 16, 128, 1024, 3, 46, 0.5, 2, 70, 0.15, 0.1, 2, 142]
validation r= 0
EVALUATE RESULTS:
tensor(62.8047) tensor(60.5174)
tensor(58.9602) tensor(61.4567)
tensor(61.1361) tensor(60.9184)
tensor(40.5837) tensor(58.5763)
tensor(36.5158) tensor(54.0712)
tensor(25.5639) tensor(50.7944)
tensor(25.2122) tensor(45.4915)
tensor(15.1235) tensor(39.1042)
tensor(11.8872) tensor(31.9424)
tensor(10.4358) tensor(24.8586)
tensor(18.0134) tensor(17.4673)
tensor(12.4635) tensor(10.4512)
tensor(13.0103) tensor(4.0132)
tensor(13.5103) tensor(-2.0715)
tensor(7.7931) tensor(-6.9355)
tensor(10.9227) tensor(-11.0851)
tensor(18.5678) tensor(-14.3671)
tensor(17.4457) tensor(-17.1600)
tensor(25.6297) tensor(-9.2487)
tensor(18.4545) tensor(-3.8311)
tensor(30.2121) tensor(2.0896)
tensor(31.2059) tensor(3.7756)
tensor(36.5414) tensor(11.0198)
tensor(37.3840) tensor(12.6689)
tensor(42.8452) tensor(18.6430)
tensor(43.9001) tensor(19.8205)
tensor(37.3606) tensor(20.2155)
tensor(53.3547) tensor(20.5146)
tensor(48.3026) tensor(24.9984)
tensor(47.2486) tensor(24.1838)
tensor(51.5476) tensor(22.7252)
tensor(53.6245) tensor(21.1207)
tensor(46.6129) tensor(18.8730)
tensor(48.4412) tensor(16.1839)
tensor(54.2151) tensor(32.7782)
tensor(48.6499) tensor(31.8597)
testing r= 0
Test Window Feature: tensor([0.2633, 0.5334, 0.5184, 0.5682, 0.6144, 0.6562, 0.6948, 0.8123, 0.7715,
        0.7850, 0.7155, 0.6384, 0.6300, 0.6194, 0.6145, 0.7724, 0.7052, 0.8636,
        0.8037, 0.8064, 0.7184, 0.7281, 0.7113, 0.8504, 0.9248, 0.8420, 0.7507,
        0.7263, 0.6200, 0.5045, 0.5553, 0.5667, 0.6350, 0.5521, 0.5476, 0.4774,
        0.5773, 0.6726, 0.6355, 0.5747, 0.5119, 0.5270, 0.5481, 0.4853, 0.6075,
        0.5579], dtype=torch.float64)
**************x_input*******************
tensor([0.2633, 0.5334, 0.5184, 0.5682, 0.6144, 0.6562, 0.6948, 0.8123, 0.7715,
        0.7850], dtype=torch.float64)
**************-------*******************
----------------------------Predicted months 1 to 36 --------------------------------------------------
torch.Size([36, 141]) torch.Size([36, 141])
tensor(0.6391) tensor(0.7155, dtype=torch.float64)
tensor(0.5879) tensor(0.6384, dtype=torch.float64)
tensor(0.6054) tensor(0.6300, dtype=torch.float64)
tensor(0.3499) tensor(0.6194, dtype=torch.float64)
tensor(0.3283) tensor(0.6145, dtype=torch.float64)
tensor(0.1642) tensor(0.7724, dtype=torch.float64)
tensor(0.1543) tensor(0.7052, dtype=torch.float64)
tensor(0.0401) tensor(0.8636, dtype=torch.float64)
tensor(-0.0069) tensor(0.8037, dtype=torch.float64)
tensor(-0.0395) tensor(0.8064, dtype=torch.float64)
tensor(0.0467) tensor(0.7184, dtype=torch.float64)
tensor(-0.0005) tensor(0.7281, dtype=torch.float64)
tensor(0.0439) tensor(0.7113, dtype=torch.float64)
tensor(0.0011) tensor(0.8504, dtype=torch.float64)
tensor(-0.0672) tensor(0.9248, dtype=torch.float64)
tensor(0.0048) tensor(0.8420, dtype=torch.float64)
tensor(0.0810) tensor(0.7507, dtype=torch.float64)
tensor(0.1156) tensor(0.7263, dtype=torch.float64)
tensor(0.1911) tensor(0.6200, dtype=torch.float64)
tensor(0.1387) tensor(0.5045, dtype=torch.float64)
tensor(0.2734) tensor(0.5553, dtype=torch.float64)
tensor(0.2832) tensor(0.5667, dtype=torch.float64)
tensor(0.3199) tensor(0.6350, dtype=torch.float64)
tensor(0.3523) tensor(0.5521, dtype=torch.float64)
tensor(0.4084) tensor(0.5476, dtype=torch.float64)
tensor(0.4575) tensor(0.4774, dtype=torch.float64)
tensor(0.4562) tensor(0.5773, dtype=torch.float64)
tensor(0.6464) tensor(0.6726, dtype=torch.float64)
tensor(0.6144) tensor(0.6355, dtype=torch.float64)
tensor(0.6506) tensor(0.5747, dtype=torch.float64)
tensor(0.6839) tensor(0.5119, dtype=torch.float64)
tensor(0.7400) tensor(0.5270, dtype=torch.float64)
tensor(0.6510) tensor(0.5481, dtype=torch.float64)
tensor(0.6506) tensor(0.4853, dtype=torch.float64)
tensor(0.7477) tensor(0.6075, dtype=torch.float64)
tensor(0.6310) tensor(0.5579, dtype=torch.float64)
------------------------------------------------------------------------------------------------------------
rrse= 818087.6311598875 / 1203440.6555062027
********************************************************************************************************
final test rse 0.6798 | test rae 0.7933 | test corr -0.1189 | test smape 0.5107
********************************************************************************************************



1 run average



valid   rse     rae     corr    s-mape
mean    0.4908  0.6266  0.0870  0.4387
std     0.0217  0.0297  0.0177  0.0343



test    rse     rae     corr    s-mape
mean    0.6922  0.7858  -0.1273 0.5033
std     0.0453  0.0338  0.0595  0.0539