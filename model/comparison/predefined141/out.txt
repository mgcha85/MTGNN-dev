best val loss= 1.0932056143197229
best hps= [2, 0.0005, 4, 32, 128, 1024, 80, 0.4, 2, 100, 0.2, 0.5, 1, 192]
validation r= 0
EVALUATE RESULTS:
tensor(36.6870) tensor(60.5174)
tensor(36.3291) tensor(61.4567)
tensor(36.0420) tensor(60.9184)
tensor(31.0681) tensor(58.5763)
tensor(29.6938) tensor(54.0712)
tensor(31.0587) tensor(50.7944)
tensor(25.8556) tensor(45.4915)
tensor(24.1755) tensor(39.1042)
tensor(23.0747) tensor(31.9424)
tensor(25.5541) tensor(24.8586)
tensor(20.0493) tensor(17.4673)
tensor(21.4666) tensor(10.4512)
tensor(23.2541) tensor(4.0132)
tensor(25.8459) tensor(-2.0715)
tensor(30.1516) tensor(-6.9355)
tensor(28.1424) tensor(-11.0851)
tensor(25.0496) tensor(-14.3671)
tensor(25.7191) tensor(-17.1600)
tensor(30.3359) tensor(-9.2487)
tensor(26.9831) tensor(-3.8311)
tensor(33.8602) tensor(2.0896)
tensor(41.4826) tensor(3.7756)
tensor(47.3472) tensor(11.0198)
tensor(44.4944) tensor(12.6689)
tensor(51.1254) tensor(18.6430)
tensor(45.5134) tensor(19.8205)
tensor(42.7714) tensor(20.2155)
tensor(44.2635) tensor(20.5146)
tensor(48.5128) tensor(24.9984)
tensor(51.4668) tensor(24.1838)
tensor(59.3006) tensor(22.7252)
tensor(65.4474) tensor(21.1207)
tensor(62.8580) tensor(18.8730)
tensor(70.2273) tensor(16.1839)
tensor(67.1204) tensor(32.7782)
tensor(63.4451) tensor(31.8597)
testing r= 0
Test Window Feature: tensor([0.2633, 0.5334, 0.5184, 0.5682, 0.6144, 0.6562, 0.6948, 0.8123, 0.7715,
        0.7850, 0.7155, 0.6384, 0.6300, 0.6194, 0.6145, 0.7724, 0.7052, 0.8636,
        0.8037, 0.8064, 0.7184, 0.7281, 0.7113, 0.8504, 0.9248, 0.8420, 0.7507,
        0.7263, 0.6200, 0.5045, 0.5553, 0.5667, 0.6350, 0.5521, 0.5476, 0.4774,
        0.5773, 0.6726, 0.6355, 0.5747, 0.5119, 0.5270, 0.5481, 0.4853, 0.6075,
        0.5579], dtype=torch.float64)
**************x_input*******************
tensor([0.2633, 0.5334, 0.5184, 0.5682, 0.6144, 0.6562, 0.6948, 0.8123, 0.7715,
        0.7850], dtype=torch.float64)
**************-------*******************
----------------------------Predicted months 1 to 36 --------------------------------------------------
torch.Size([36, 141]) torch.Size([36, 141])
tensor(0.6628) tensor(0.7155, dtype=torch.float64)
tensor(0.6103) tensor(0.6384, dtype=torch.float64)
tensor(0.4966) tensor(0.6300, dtype=torch.float64)
tensor(0.4363) tensor(0.6194, dtype=torch.float64)
tensor(0.3737) tensor(0.6145, dtype=torch.float64)
tensor(0.4121) tensor(0.7724, dtype=torch.float64)
tensor(0.2558) tensor(0.7052, dtype=torch.float64)
tensor(0.2444) tensor(0.8636, dtype=torch.float64)
tensor(0.1324) tensor(0.8037, dtype=torch.float64)
tensor(0.1499) tensor(0.8064, dtype=torch.float64)
tensor(0.0178) tensor(0.7184, dtype=torch.float64)
tensor(0.0755) tensor(0.7281, dtype=torch.float64)
tensor(-0.0192) tensor(0.7113, dtype=torch.float64)
tensor(0.0986) tensor(0.8504, dtype=torch.float64)
tensor(0.1406) tensor(0.9248, dtype=torch.float64)
tensor(0.1042) tensor(0.8420, dtype=torch.float64)
tensor(0.0843) tensor(0.7507, dtype=torch.float64)
tensor(0.1250) tensor(0.7263, dtype=torch.float64)
tensor(0.2050) tensor(0.6200, dtype=torch.float64)
tensor(0.1794) tensor(0.5045, dtype=torch.float64)
tensor(0.1298) tensor(0.5553, dtype=torch.float64)
tensor(0.2281) tensor(0.5667, dtype=torch.float64)
tensor(0.3514) tensor(0.6350, dtype=torch.float64)
tensor(0.2609) tensor(0.5521, dtype=torch.float64)
tensor(0.3683) tensor(0.5476, dtype=torch.float64)
tensor(0.3325) tensor(0.4774, dtype=torch.float64)
tensor(0.2843) tensor(0.5773, dtype=torch.float64)
tensor(0.3906) tensor(0.6726, dtype=torch.float64)
tensor(0.4422) tensor(0.6355, dtype=torch.float64)
tensor(0.4380) tensor(0.5747, dtype=torch.float64)
tensor(0.5701) tensor(0.5119, dtype=torch.float64)
tensor(0.6657) tensor(0.5270, dtype=torch.float64)
tensor(0.6460) tensor(0.5481, dtype=torch.float64)
tensor(0.7436) tensor(0.4853, dtype=torch.float64)
tensor(0.6224) tensor(0.6075, dtype=torch.float64)
tensor(0.6280) tensor(0.5579, dtype=torch.float64)
------------------------------------------------------------------------------------------------------------
rrse= 801110.460638335 / 1203440.6555062027
********************************************************************************************************
final test rse 0.6657 | test rae 0.7164 | test corr -0.1352 | test smape 0.4725
********************************************************************************************************



1 run average



valid   rse     rae     corr    s-mape
mean    0.5160  0.6706  0.0820  0.4560
std     0.0185  0.0270  0.0182  0.0317



test    rse     rae     corr    s-mape
mean    0.7604  0.8792  -0.1188 0.5175
std     0.0926  0.1046  0.0393  0.0420