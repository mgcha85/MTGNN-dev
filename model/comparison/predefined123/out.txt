best val loss= 2.7152623242737652
best hps= [3, 0.005, 16, 64, 256, 256, 60, 0.2, 1, 40, 0.1, 0.05, 1, 15]
validation r= 73
EVALUATE RESULTS:
tensor(0.3733) tensor(0.2430)
tensor(0.2889) tensor(0.1763)
tensor(0.2501) tensor(0.1110)
tensor(0.3080) tensor(0.0489)
tensor(0.3018) tensor(-0.0084)
tensor(0.2816) tensor(-0.0598)
tensor(0.2226) tensor(-0.1042)
tensor(0.2331) tensor(-0.1411)
tensor(0.2726) tensor(-0.1700)
tensor(0.1923) tensor(-0.1910)
tensor(0.2555) tensor(-0.2041)
tensor(0.2382) tensor(-0.2098)
tensor(0.2331) tensor(-0.2086)
tensor(0.2617) tensor(0.3187)
tensor(0.2984) tensor(0.3837)
tensor(0.2884) tensor(0.4307)
tensor(0.2878) tensor(0.4601)
tensor(0.2663) tensor(0.4727)
tensor(0.2918) tensor(0.4699)
tensor(0.3650) tensor(0.4533)
tensor(0.4368) tensor(0.4248)
tensor(0.4147) tensor(0.3863)
tensor(0.3909) tensor(0.3401)
tensor(0.4677) tensor(0.2884)
tensor(0.5718) tensor(0.2331)
tensor(0.5538) tensor(0.1764)
tensor(0.6714) tensor(0.1201)
tensor(0.6753) tensor(0.0658)
tensor(0.6947) tensor(0.0149)
tensor(0.7522) tensor(-0.0313)
tensor(0.7324) tensor(-0.0720)
tensor(0.7708) tensor(-0.1064)
tensor(0.7367) tensor(-0.1342)
tensor(0.7574) tensor(0.1048)
tensor(0.8168) tensor(0.1168)
tensor(0.7503) tensor(0.1241)
testing r= 0
Test Window Feature: tensor([0.2633, 0.5334, 0.5184, 0.5682, 0.6144, 0.6562, 0.6948, 0.8123, 0.7715,
        0.7850, 0.7155, 0.6384, 0.6300, 0.6194, 0.6145, 0.7724, 0.7052, 0.8636,
        0.8037, 0.8064, 0.7184, 0.7281, 0.7113, 0.8504, 0.9248, 0.8420, 0.7507,
        0.7263, 0.6200, 0.5045, 0.5553, 0.5667, 0.6350, 0.5521, 0.5476, 0.4774,
        0.5773, 0.6726, 0.6355, 0.5747, 0.5119, 0.5270, 0.5481, 0.4853, 0.6075,
        0.5579], dtype=torch.float64)
**************x_input*******************
tensor([0.2633, 0.5334, 0.5184, 0.5682, 0.6144, 0.6562, 0.6948, 0.8123, 0.7715,
        0.7850], dtype=torch.float64)
**************-------*******************
----------------------------Predicted months 1 to 36 --------------------------------------------------
torch.Size([36, 123]) torch.Size([36, 123])
tensor(0.5948) tensor(0.7155, dtype=torch.float64)
tensor(0.4694) tensor(0.6384, dtype=torch.float64)
tensor(0.4118) tensor(0.6300, dtype=torch.float64)
tensor(0.4975) tensor(0.6194, dtype=torch.float64)
tensor(0.4982) tensor(0.6145, dtype=torch.float64)
tensor(0.4527) tensor(0.7724, dtype=torch.float64)
tensor(0.3684) tensor(0.7052, dtype=torch.float64)
tensor(0.3788) tensor(0.8636, dtype=torch.float64)
tensor(0.4435) tensor(0.8037, dtype=torch.float64)
tensor(0.3069) tensor(0.8064, dtype=torch.float64)
tensor(0.4035) tensor(0.7184, dtype=torch.float64)
tensor(0.3813) tensor(0.7281, dtype=torch.float64)
tensor(0.3711) tensor(0.7113, dtype=torch.float64)
tensor(0.4218) tensor(0.8504, dtype=torch.float64)
tensor(0.4705) tensor(0.9248, dtype=torch.float64)
tensor(0.4601) tensor(0.8420, dtype=torch.float64)
tensor(0.4532) tensor(0.7507, dtype=torch.float64)
tensor(0.4345) tensor(0.7263, dtype=torch.float64)
tensor(0.4696) tensor(0.6200, dtype=torch.float64)
tensor(0.5877) tensor(0.5045, dtype=torch.float64)
tensor(0.6955) tensor(0.5553, dtype=torch.float64)
tensor(0.6784) tensor(0.5667, dtype=torch.float64)
tensor(0.6399) tensor(0.6350, dtype=torch.float64)
tensor(0.7452) tensor(0.5521, dtype=torch.float64)
tensor(0.9214) tensor(0.5476, dtype=torch.float64)


1 run average



valid   rse     rae     corr    s-mape
mean    1.3681  1.3873  0.0496  0.3612
std     0.0536  0.0461  0.0144  0.0071



test    rse     rae     corr    s-mape
mean    3.2469  2.9831  -0.2564 0.4089
std     0.2396  0.1922  0.0324  0.0102