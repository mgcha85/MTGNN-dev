best val loss= 0.9389202663468996
best hps= [2, 0.001, 4, 16, 128, 512, 20, 0.2, 3, 20, 0.6, 0.5, 2, 151]
validation r= 116
EVALUATE RESULTS:
tensor(11.8781) tensor(10.6046)
tensor(10.7181) tensor(10.8886)
tensor(9.8254) tensor(10.1375)
tensor(10.3237) tensor(9.2774)
tensor(8.6771) tensor(10.0350)
tensor(7.2730) tensor(10.2757)
tensor(8.5072) tensor(13.1442)
tensor(5.7944) tensor(13.1714)
tensor(4.8201) tensor(13.1708)
tensor(5.3194) tensor(13.0451)
tensor(4.0055) tensor(12.8107)
tensor(4.8299) tensor(11.5754)
tensor(3.8897) tensor(11.9963)
tensor(4.1917) tensor(12.1052)
tensor(2.6022) tensor(10.8001)
tensor(2.8278) tensor(9.8816)
tensor(5.0042) tensor(9.8484)
tensor(4.9446) tensor(9.0031)
tensor(5.8303) tensor(8.5422)
tensor(4.5174) tensor(6.9711)
tensor(5.8755) tensor(5.9981)
tensor(6.6695) tensor(5.3523)
tensor(8.8097) tensor(4.5606)
tensor(8.9084) tensor(5.1613)
tensor(9.4886) tensor(4.5670)
tensor(9.9177) tensor(5.9652)
tensor(11.1391) tensor(6.5745)
tensor(9.8048) tensor(6.4757)
tensor(10.8664) tensor(6.7326)
tensor(10.6594) tensor(8.8217)
tensor(11.6692) tensor(10.0573)
tensor(12.8847) tensor(10.3776)
tensor(13.3693) tensor(12.3846)
tensor(13.3700) tensor(13.4093)
tensor(13.3779) tensor(13.6693)
tensor(13.3514) tensor(13.4732)
testing r= 0
Test Window Feature: tensor([0.2633, 0.5334, 0.5184, 0.5682, 0.6144, 0.6562, 0.6948, 0.8123, 0.7715,
        0.7850, 0.7155, 0.6384, 0.6300, 0.6194, 0.6145, 0.7724, 0.7052, 0.8636,
        0.8037, 0.8064, 0.7184, 0.7281, 0.7113, 0.8504, 0.9248, 0.8420, 0.7507,
        0.7263, 0.6200, 0.5045, 0.5553, 0.5667, 0.6350, 0.5521, 0.5476, 0.4774,
        0.5773, 0.6726, 0.6355, 0.5747, 0.5119, 0.5270, 0.5481, 0.4853, 0.6075,
        0.5579], dtype=torch.float64)
**************x_input*******************
tensor([0.2633, 0.5334, 0.5184, 0.5682, 0.6144, 0.6562, 0.6948, 0.8123, 0.7715,
        0.7850], dtype=torch.float64)
**************-------*******************
----------------------------Predicted months 1 to 36 --------------------------------------------------
torch.Size([36, 141]) torch.Size([36, 141])
tensor(0.7486) tensor(0.7155, dtype=torch.float64)
tensor(0.6555) tensor(0.6384, dtype=torch.float64)
tensor(0.5989) tensor(0.6300, dtype=torch.float64)
tensor(0.6127) tensor(0.6194, dtype=torch.float64)
tensor(0.5075) tensor(0.6145, dtype=torch.float64)
tensor(0.4172) tensor(0.7724, dtype=torch.float64)
tensor(0.4980) tensor(0.7052, dtype=torch.float64)
tensor(0.3130) tensor(0.8636, dtype=torch.float64)
tensor(0.2410) tensor(0.8037, dtype=torch.float64)
tensor(0.2326) tensor(0.8064, dtype=torch.float64)
tensor(0.1695) tensor(0.7184, dtype=torch.float64)
tensor(0.2239) tensor(0.7281, dtype=torch.float64)
tensor(0.1323) tensor(0.7113, dtype=torch.float64)
tensor(0.1506) tensor(0.8504, dtype=torch.float64)
tensor(0.0395) tensor(0.9248, dtype=torch.float64)
tensor(0.0339) tensor(0.8420, dtype=torch.float64)
tensor(0.1532) tensor(0.7507, dtype=torch.float64)
tensor(0.1488) tensor(0.7263, dtype=torch.float64)
tensor(0.1902) tensor(0.6200, dtype=torch.float64)
tensor(0.0807) tensor(0.5045, dtype=torch.float64)
tensor(0.1632) tensor(0.5553, dtype=torch.float64)
tensor(0.2014) tensor(0.5667, dtype=torch.float64)
tensor(0.3177) tensor(0.6350, dtype=torch.float64)
tensor(0.3207) tensor(0.5521, dtype=torch.float64)
tensor(0.3535) tensor(0.5476, dtype=torch.float64)
tensor(0.3632) tensor(0.4774, dtype=torch.float64)
tensor(0.4628) tensor(0.5773, dtype=torch.float64)
tensor(0.3638) tensor(0.6726, dtype=torch.float64)
tensor(0.4553) tensor(0.6355, dtype=torch.float64)
tensor(0.4535) tensor(0.5747, dtype=torch.float64)
tensor(0.5296) tensor(0.5119, dtype=torch.float64)
tensor(0.5846) tensor(0.5270, dtype=torch.float64)
tensor(0.6381) tensor(0.5481, dtype=torch.float64)
tensor(0.6377) tensor(0.4853, dtype=torch.float64)
tensor(0.6129) tensor(0.6075, dtype=torch.float64)
tensor(0.6604) tensor(0.5579, dtype=torch.float64)
------------------------------------------------------------------------------------------------------------
rrse= 695163.4881362676 / 1203440.6555062027
********************************************************************************************************
final test rse 0.5776 | test rae 0.6214 | test corr -0.0706 | test smape 0.4423
********************************************************************************************************



1 run average



valid   rse     rae     corr    s-mape
mean    0.4618  0.5773  0.1014  0.3791
std     0.0000  0.0000  0.0000  0.0000



test    rse     rae     corr    s-mape
mean    0.5776  0.6214  -0.0706 0.4423
std     0.0000  0.0000  0.0000  0.0000